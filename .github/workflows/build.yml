name: Build aestest with precompiled Qt

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Dependencies with Chocolatey
      shell: powershell
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
        choco install ninja -y
        choco install openssl -y

    - name: Download Qt Online Installer
      run: |
        Invoke-WebRequest -Uri https://download.qt.io/official_releases/online_installers/qt-unified-windows-x86-online.exe -OutFile qt-installer.exe

    - name: Cache Qt Installation
      uses: actions/cache@v3
      id: qt-cache
      with:
        path: C:\Qt\6.5.0\msvc2019_64
        key: ${{ runner.os }}-qt-6.5.0-msvc2019_64

    - name: Install Qt
      if: steps.qt-cache.outputs.cache-hit != 'true'
      run: |
        .\qt-installer.exe --quiet --accept-licenses --accept-obligations --no-default-installations --platform minimal --script qt-install-script.qs

    - name: Set Qt Environment Variable
      run: |
        echo "QT_MSVC2019_64=C:\Qt\6.5.0\msvc2019_64" >> $env:GITHUB_ENV

    - name: Configure CMake
      run: |
        cmake -B build -G "Ninja" -DCMAKE_PREFIX_PATH="$env:QT_MSVC2019_64" -DOPENSSL_ROOT_DIR="C:/Program Files/OpenSSL-Win64" .

    - name: Build Project
      run: |
        cmake --build build --config Release

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: aestest-build
        path: build/Release/aestest.exe
