name: Static Build for aestest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Chocolatey
      shell: powershell
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12
        Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        $env:PATH += ";$([System.Environment]::GetEnvironmentVariable('ProgramData'))\chocolatey\bin"

    - name: Install Strawberry Perl with Chocolatey
      run: |
        C:\ProgramData\chocolatey\bin\choco install strawberryperl -y
      env:
        PATH: C:\Strawberry\perl\bin;%PATH%

    - name: Download and Extract NASM
      run: |
        Invoke-WebRequest -Uri https://www.nasm.us/pub/nasm/releasebuilds/2.16/nasm-2.16.zip -OutFile nasm.zip
        Expand-Archive -Path nasm.zip -DestinationPath C:/nasm
      env:
        PATH: C:/nasm;%PATH%

    - name: Download and Extract OpenSSL 3.4.0
      run: |
        Invoke-WebRequest -Uri https://github.com/openssl/openssl/releases/download/openssl-3.4.0/openssl-3.4.0.tar.gz -OutFile openssl.tar.gz
        tar -xzf openssl.tar.gz

    - name: Set up Visual Studio Environment and Build OpenSSL 3.4.0
      shell: cmd
      run: |
        REM Set up Visual Studio environment for `nmake`
        "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -find VC\Auxiliary\Build\vcvars64.bat > temp.bat
        call temp.bat
        cd openssl-3.4.0
        perl Configure VC-WIN64A no-shared no-zlib --prefix=C:/Lib/OpenSSL340-static
        nmake
        nmake install
      env:
        PATH: C:/nasm;C:\Strawberry\perl\bin;%PATH%

    - name: Download and Extract Qt 6.5.0
      run: |
        Invoke-WebRequest -Uri https://download.qt.io/official_releases/qt/6.5/6.5.0/single/qt-everywhere-src-6.5.0.zip -OutFile qt.zip
        tar -xf qt.zip

    - name: Build and Install Static Qt 6.5.0
      shell: cmd
      run: |
        call temp.bat
        cd qt-everywhere-src-6.5.0
        configure -static -release -nomake examples -nomake tests -prefix C:/Lib/Qt650-static
        nmake
        nmake install

    - name: Configure CMake with Static Libraries
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release \
                  -DOPENSSL_ROOT_DIR=C:/Lib/OpenSSL340-static \
                  -DOPENSSL_USE_STATIC_LIBS=TRUE \
                  -DCMAKE_PREFIX_PATH=C:/Lib/Qt650-static \
                  -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded$<$<CONFIG:Debug>:Debug> # Use /MT flag for static runtime

    - name: Build Project
      run: |
        cd build
        cmake --build . --config Release

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: aestest-static-build
        path: build/Release/aestest.exe
